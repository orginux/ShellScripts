#!/bin/bash

# filelock -- гибкий механизм блокировки файлов

retries="10"            # Число попыток по умолчанию
action="lock"           # Действи по умолчанию
nullcmd="'which true'"  # Пустая команда для lockfile 

while getopts "lur:" opt; do
    case $opt in 
        l ) action="lock" ;;
        u ) action="unlock" ;;
        r ) retries="$OPTTARG" ;; # OPTARG -– содержит аргумент, передаваемый опции
    esac
done

shift $(($OPTIND - 1)) # OPTIND -- хранит внуттренний индекс следующей опции

if [ $# -eq 0 ] ; then # Вывести многострочное сообщение об ошибке
    cat << EOF >&2
        Usage: $0 [-l|-u] [-r retries] LOCKFILE
        Where -l requests a lock (the default), -u requests an unlock, -r X
        specifies a max number of retries before it fails (default = $retries).
EOF
        exit 1
fi


# Проверка наличия lockfile

if [ -z "$(which lockfile | grep -v '^no' )" ] ; then # Проверка доступности в списке путей
    echo "$0 failed: 'lockfile' utility not found in PATH" >&2
    exit 1
fi

if [ "$action" = "lock" ] ;then # Действие = блокировка
    if ! lockfile -1 -r  $retries "$1" 2>/dev/null ; then
        echo "$0 : Failed: Couldn't create lockfile in time" >&2
        exit 1
    fi
else # Действие = разблокировка
    if [ ! -f "$1" ] ; then 
        echo "$0: Warning: lockfile $1 doesn't exit to unlock" >&2
        exit 1
    fi
    rm -f "$1"
fi
exit 0
